import 'package:buytime/gigs.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';


// script shall contains all the methods which are called to store specific types of data

void storeBasicSettings(String value1, String value2, String value3) async {
  CollectionReference collectionRef = FirebaseFirestore.instance.collection('Choice_of_Work');
  // Create a document with an autogenerated ID, or specify your own ID
  DocumentReference docRef = collectionRef.doc();

  try {
    await docRef.set({
      'category_1': value1,
      'category_2': value2,
      'category_3': value3,
    });
  } catch (e) {
    print("Error storing data: $e");
  }
}


/*
cLocation VariousGigs(){
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;

  _firestore.collection('your_collection').doc('your_document_id').get();
  builder: (BuildContext context, AsyncSnapshot<DocumentSnapshot> snapshot) {
  if (snapshot.connectionState == ConnectionState.waiting) {
      //return Center(child: CircularProgressIndicator());
  }

  if (snapshot.hasError) {
    // return Center(child: Text('Error: ${snapshot.error}'));
  }

  if (!snapshot.hasData) {
      //return Center(child: Text('Document not found'));
  }

  return new cLocation(name: snapshot, place: place, distance: distance, imageUrl: imageUrl, price: price)

}

 */